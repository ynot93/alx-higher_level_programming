Doctests:

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([1, 2], [[3, 4], [5, 6]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [5, 6])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

>>> matrix_mul([[]], [[3, 4], [5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 'four']])
Traceback (most recent call last):
    ...
TypeError: m_a should only contain integers or floats

>>> matrix_mul([['one', 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_b should only contain integers or floats

>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size
